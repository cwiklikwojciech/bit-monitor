{"version":3,"sources":["WebSocket.js","getApi.js","App.js","reportWebVitals.js","index.js"],"names":["empSalBB","WebSockett","useState","bs","setBS","dolar","setDolar","last","setLast","bb","setBB","lastbb","setLastbb","useEffect","ws","x","xbb","subscribeMsg","WebSocket","onopen","send","JSON","stringify","onmessage","evt","response","parse","data","console","log","price","setInterval","axios","get","then","res","rates","mid","catch","err","ticker","rate","i","className","toFixed","class","GetApi","props","number","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a131d6ce.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport './App.css';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nlet empAge = [20, 12, 123, 435, 12, 531, 34, 12, 64, 75];\r\nlet empSal = [98000, 98000, 98000, 98000, 98000, 98000, 98000, 98000, 98000, 98000];\r\nlet empSalBB = [104500, 104500, 104500, 104500, 104500, 104500, 104500, 104500, 104500, 104500];\r\n\r\nfunction WebSockett() {\r\n\r\n    const [bs, setBS] = useState([])\r\n    const [dolar, setDolar] = useState([])\r\n    const [last, setLast] = useState([])\r\n    const [bb, setBB] = useState([])\r\n    const [lastbb, setLastbb] = useState([])\r\n\r\n    const [chartData, setChartData] = useState({});\r\n\r\n    useEffect(() => {\r\n\r\n        let x = 0;\r\n        let xbb = 1;\r\n\r\n        var subscribeMsg = {\r\n            \"event\": \"bts:subscribe\",\r\n            \"data\": {\r\n                \"channel\": \"live_trades_btcusd\"\r\n            }\r\n        };\r\n\r\n        let ws;\r\n        ws = new WebSocket(\"wss://ws.bitstamp.net\");\r\n        ws.onopen = function () {\r\n            ws.send(JSON.stringify(subscribeMsg));\r\n        };\r\n\r\n\r\n\r\n        ws.onmessage = function (evt) {\r\n            let response = JSON.parse(evt.data);\r\n            console.log(response.data.price);\r\n            setBS(response.data.price);\r\n            x = (response.data.price);\r\n\r\n            //if (response.data.price > 1) { empSal[9] = response.data.price; }\r\n\r\n\r\n        }\r\n\r\n\r\n        setInterval(() => {\r\n\r\n\r\n            axios.get('https://api.nbp.pl/api/exchangerates/rates/a/usd/last/1/?format=json')\r\n                .then(res => {\r\n                    //console.log(res.data.rates[0].mid)\r\n                    setDolar(res.data.rates[0].mid)\r\n                })\r\n                .catch(err => {\r\n                    // console.log(err)\r\n                })\r\n\r\n            axios.get('https://api.bitbay.net/rest/trading/ticker/BTC-PLN')\r\n                .then(res => {\r\n                    //console.log(res.data.ticker.rate)\r\n                    setBB(res.data.ticker.rate)\r\n                    xbb = res.data.ticker.rate;\r\n\r\n                    for (let i = 0; i < 10; i++) {\r\n                        empSalBB[i] = empSalBB[i + 1];\r\n                    }\r\n                    empSalBB[9] = (res.data.ticker.rate);\r\n                })\r\n                .catch(err => {\r\n                    //console.log(err)\r\n                })\r\n\r\n            setLast(x);\r\n            setLastbb(xbb);\r\n\r\n        }, 30000);\r\n\r\n\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"exchange\">\r\n                <div className=\"ex1\">\r\n                    BitStamp\r\n                    <div className=\"BitStamp\">\r\n                        {(bs * dolar).toFixed(2)}\r\n                        <br />\r\n                        {(((bs - last) / bs) * 100).toFixed(2) >= 0 ? <span class=\"green\">{(((bs - last) / bs) * 100).toFixed(2)}%</span> : <span class=\"red\">{(((bs - last) / bs) * 100).toFixed(2)}%</span>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"ex1\">\r\n                    BitBay\r\n            <div className=\"BitStamp\">\r\n                        {(bb * 1).toFixed(0)} <br />\r\n                        {(((bb - lastbb) / bb) * 100).toFixed(2) >= 0 ? <span class=\"green\">{(((bb - lastbb) / bb) * 100).toFixed(2)}%</span> : <span class=\"red\">{(((bb - lastbb) / bb) * 100).toFixed(2)}%</span>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default WebSockett\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction GetApi(props) {\r\n\r\n\r\n\r\n    const [dolar, setDolar] = useState([])\r\n    useEffect(() => {\r\n        //setDolar(props.numbers);\r\n        console.log(props.number);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default GetApi;\r\n","import React from 'react'\nimport './App.css';\nimport DataFetching from './DataFetching.js';\nimport DankMemes from \"./Dankmemes.js\";\nimport WebSockett from \"./WebSocket.js\";\nimport GetApi from \"./getApi.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GetApi number={111} />\n      {/* <DataFetching /> */}\n      {/* <DankMemes /> */}\n      <WebSockett />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}